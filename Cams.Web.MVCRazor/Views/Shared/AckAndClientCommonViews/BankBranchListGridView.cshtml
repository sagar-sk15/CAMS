@model Cams.Web.MVCRazor.Models.Shared.BankBranchListModel
@using Cams.Web.MVCRazor
@using Cams.Common.Dto

@Html.DevExpress().CallbackPanel(s => {
    s.Name = "PanelBankBranchListGridView";
    s.CallbackRouteValues = new { Controller = "Common", Action = "GetBankBranchListOnBankId" };
    s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    //s.Height = 50;

                s.SetContent(() => 
                {
                    @Html.DevExpress().GridView(
                                    settings =>
                                    {
                                        settings.Name = "BankBranchListGridViewDataBinding";
                                        settings.CallbackRouteValues = new { Controller = "BankBranch", Action = "BankBranchListGridView" };
                                        settings.Settings.ShowTitlePanel = false;
                                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
                                        settings.SettingsPager.ShowEmptyDataRows = true;
                                        settings.SettingsPager.AlwaysShowPager = true;
                                        settings.SettingsPager.PageSize = 10;
                                        settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Bottom;
                                        settings.SettingsPager.FirstPageButton.Visible = true;
                                        settings.SettingsPager.LastPageButton.Visible = true;
                                        settings.Settings.ShowFilterRow = true;
                                        settings.ControlStyle.CssClass = "generaltext";
                                        settings.Settings.ShowGroupPanel = true;
                                        settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;

                                        settings.CustomCallback = (sender, e) =>
                                        {
                                            int layoutIndex = Int32.Parse(e.Parameters);
                                            MVCxGridView grid = (MVCxGridView)sender;

                                            grid.BeginUpdate();
                                            try
                                            {
                                                grid.ClearSort();
                                                switch (layoutIndex)
                                                {
                                                    case 0:
                                                        grid.GroupBy(grid.Columns["BranchOfBank.BankName"]);
                                                        break;
                                                    case 1:
                                                        grid.GroupBy(grid.Columns["BranchAddress.CityVillage"]);
                                                        break;
                                                    case 2:
                                                        grid.GroupBy(grid.Columns["IFSC"]);
                                                        break;
                                                    case 3:
                                                        grid.GroupBy(grid.Columns["MICR"]);
                                                        break;
                                                    case 4:
                                                        grid.GroupBy(grid.Columns["SWIFT"]);
                                                        break;
                                                }
                                            }
                                            finally
                                            {
                                                grid.EndUpdate();
                                            }
                                            grid.ExpandAll();
                                        };

                                        settings.Columns.Add("BranchOfBank.BankName", "Bank");
                                        settings.Columns.Add("BranchAddress.CityVillage", "City");
                                        settings.Columns.Add("IFSCCode", "IFSC");
                                        settings.Columns.Add("MICRCode", "MICR");
                                        settings.Columns.Add("SWIFTCode", "SWIFT");
                                        

                                        settings.Columns.Add(column =>
                                        {
                                            column.Caption = "Contacts";
                                            column.Settings.AllowAutoFilter = DefaultBoolean.False;
                                            column.Settings.SortMode = DevExpress.XtraGrid.ColumnSortMode.DisplayText;
                                            //column.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                                            column.SetDataItemTemplateContent(c =>
                                            {
                                                ViewContext.Writer.Write(
                                                    Html.DevExpress().Label(editSettings =>
                                                    {
                                                        editSettings.Text = string.Empty;

                                                        foreach (ContactDetailsDto contact in (ContactDetailsDto[])DataBinder.Eval(c.DataItem, "BranchContactNos"))
                                                        {
                                                            editSettings.Text += contact.ContactNoType.ToString() + ": (" + contact.CountryCallingCode + ") " + ((contact.ContactNoType.ToString() != Cams.Common.ContactType.MobileNo.ToString()) ? contact.STDCode + " - " : string.Empty) + contact.ContactNo + "\n";
                                                        }
                                                        editSettings.Text += ((ContactDetailsDto[])DataBinder.Eval(c.DataItem, "ContactNos")).Length > 0 ? "\n" : string.Empty;
                                                        string website = (string)DataBinder.Eval(c.DataItem, "BranchOfBank.URL");
                                                        string email1 = (string)DataBinder.Eval(c.DataItem, "Email1");
                                                        string email2 = (string)DataBinder.Eval(c.DataItem, "Email2");
                                                        editSettings.Text += (!String.IsNullOrEmpty(website) ? "Website: " + website : string.Empty) + (!String.IsNullOrEmpty(email1) ? "\neMail1: " + email1 : string.Empty) + (!String.IsNullOrEmpty(email2) ? "\neMail2: " + email2 : string.Empty);
                                                    }).GetHtml().ToHtmlString()
                                                    );
                                            });
                                        });
                                    }).Bind(Model.BankBranchList).GetHtml();
                });
                s.ClientSideEvents.BeginCallback = "BankBranchListGridViewBeginCallback(s, e) { e.customArgs['BankId'] = cbbBankBranch.GetValue(); }";
    }
).GetHtml()
