@using Cams.Web.MVCRazor.Models.ClientRegistration
@using Cams.Common
@using Cams.Web.MVCRazor

@*Resource kay related to this page have prefix CPD*@

@model IList<ClientSubscriptionPaymentDetailsModel>   
<div id="Cheque" class="groupfieldset" style="display: none;">
    &nbsp;Cheque
    @for (int i = 0; i < Model.Count(); i++)
    {
        if (Model[i].PaymentMode == PaymentMode.Cheque)
        {
        <ul class="reset onecolfield fl">
            <li>
                <label id="lbl" class="width100">
                    &nbsp;</label>
                @if (Model[i].IsRTGS)
                {
                    @Html.RadioButtonFor(model => model[i].TransactionType, "RTGS", new { @Checked = "checked", id = "ChequeRTGS" + i.ToString(), @onchange = string.Format("onChequeFieldsValueChange({0})", i) })
                }
                else
                {
                    @Html.RadioButtonFor(model => model[i].TransactionType, "RTGS", new { id = "ChequeRTGS" + i.ToString(), @onchange = string.Format("onChequeFieldsValueChange({0})", i) })
                }
                <span>@ClientResources.CPDRTGS </span>
                @if (Model[i].IsStandardCheque)
                {
                    @Html.RadioButtonFor(model => model[i].TransactionType, "Standard Cheque", new { @Checked = "checked", id = "ChequeStandard" + i.ToString(), @onchange = string.Format("onChequeFieldsValueChange({0})", i) })
                }
                else
                {
                    @Html.RadioButtonFor(model => model[i].TransactionType, "Standard Cheque", new { id = "ChequeStandard" + i.ToString(), @onchange = string.Format("onChequeFieldsValueChange({0})", i) })
                }
                <span>@ClientResources.CPDStandardCheque</span>
                <div class="fr" style="padding-right: 28px">
                    <label id="lblChequeAmount" class="width90">
                        Amount</label>
                    <span class="WebRupee">
                        <img width="10" height="10" src="../../Content/Images/Control/RupeeFont.png" />
                    </span>
                    @Html.TextBoxFor(model => model[i].ChequeAmount, new { @class = "clsAmount required width75", @maxlength = "10", id = "txtAmount" + i.ToString(), @onchange = string.Format("onChequeFieldsValueChange({0})", i) })
                </div>
            </li>
        </ul>
        <ul class="reset leftfield fl" style="width: 100%">
            <li>
                <div class="fl">
                    <label id="lblChequeNo" class="width100">
                        @ClientResources.CPDChequeNo</label>
                    @Html.TextBoxFor(model => model[i].ChequeDDTransationNo, new { @class = "required width75", @maxlength = "10", id = "ChequeNo" + i.ToString(), @onchange = string.Format("onChequeFieldsValueChange({0})", i) })
                </div>
            </li>
        </ul>
        <ul class="reset leftfield fl" style="width: 37%">
            <li>
                <label id="lblChequeDate" class="width100">
                     @ClientResources.CPDChequeDate</label>
                @Html.DevExpress().DateEdit(settings =>
       {
           settings.Width = System.Web.UI.WebControls.Unit.Pixel(110);
           settings.Name = "ChequeDate" + i.ToString();
           settings.Properties.NullText = "DD-MM-YYYY";
           settings.Properties.EditFormat = DevExpress.Web.ASPxEditors.EditFormat.Custom;
           settings.Properties.EditFormatString = Cams.Common.Constants.DATEFORMATFORDISPAY;
           settings.Properties.UseMaskBehavior = true;
           settings.ControlStyle.Font.Name = "DejaVu Serif";
           settings.ControlStyle.CssClass = "required";
           settings.ControlStyle.BackColor = System.Drawing.Color.White;
           settings.Properties.ClientSideEvents.ValueChanged = String.Format("function (s, e) {{onChequeFieldsValueChange('{0}');}}", i);
           //settings.Properties.ClientSideEvents.DateChanged = String.Format("function (s, e) {{OnChequeDateChange('{0}');}}", i);
       }).Bind(Model[i].ChequeDDTransactionDate).GetHtml()
            </li>
        </ul>
        <ul class="reset leftfield fr" style="width: 63%">
            <li>
                <label id="lblChequeDate" class="width100">
                    @ClientResources.CPDClearanceDate</label>
                @Html.DevExpress().DateEdit(settings =>
       {
           settings.Width = System.Web.UI.WebControls.Unit.Pixel(110);
           settings.Name = "ChequeClearanceDate" + i.ToString();
           settings.Properties.NullText = "DD-MM-YYYY";
           settings.Properties.EditFormat = DevExpress.Web.ASPxEditors.EditFormat.Custom;
           settings.Properties.EditFormatString = Cams.Common.Constants.DATEFORMATFORDISPAY;
           settings.Properties.UseMaskBehavior = true;
           settings.ControlStyle.Font.Name = "DejaVu Serif";
           settings.ControlStyle.CssClass = "required";
           settings.ControlStyle.BackColor = System.Drawing.Color.White;
           settings.Properties.ClientSideEvents.ValueChanged = String.Format("function (s, e) {{onChequeFieldsValueChange('{0}');}}", i);
       }).Bind(Model[i].ChequeDDClearanceDates).GetHtml()
            </li>
        </ul>
        <ul class="reset leftfield fl" style="width: 52%">
            <li>
                <label id="lbl_Bank" class="width100">
                    @ClientResources.CPDDrawnon
                </label>
                @Html.DevExpress().ComboBox(cmbsettings =>
            {
                cmbsettings.Name = "BankandBranch" + Model[i].PaymentMode + i.ToString();
                cmbsettings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                cmbsettings.Width = System.Web.UI.WebControls.Unit.Pixel(250);
                cmbsettings.SelectedIndex = 0;
                cmbsettings.ControlStyle.Font.Name = "DejaVu Serif";
                cmbsettings.ControlStyle.Font.Size = System.Web.UI.WebControls.FontUnit.Point(10);
                cmbsettings.ControlStyle.CssClass = "comboBoxControl";
                cmbsettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                cmbsettings.Properties.TextFormatString = "{0},{1}";
                cmbsettings.Properties.ValueField = "BranchId";
                cmbsettings.Properties.ValueType = typeof(int);
                cmbsettings.Properties.TextField = "Name";
                cmbsettings.Properties.Columns.Add("BranchOfBank.BankName", "Bank Name");
                cmbsettings.Properties.Columns.Add("Name", "Branch");
                cmbsettings.Properties.Columns.Add("BranchAddress.CityVillage.Name", "Place");
                cmbsettings.Properties.CallbackPageSize = 30;
                cmbsettings.Properties.ClientSideEvents.ValueChanged = String.Format("function (s, e) {{onChequeFieldsValueChange('{0}');}}", i);
            }).BindList(ClientSubscriptionPaymentDetailsModel.GetAllBankandBranche()).Bind(Model[i].HiddenFieldForChequeBankBranch).GetHtml()
            </li>
        </ul>
        <ul class="reset leftfield fr" style="width: 48%">
            <li><a class="search-data" href="#" onclick="SearchBankBranchImageClick(@i,'Cheque')"></a></li>
        </ul>
           if (i == 1)
           {
        <ul class="reset rightfield fr" style="width: 15%">
            <li><a class="button_Add" href="javascript:ChequeAddNewButtonClick(@Model.Count)"></a>
            </li>
        </ul>
           }
           else
           {
        <ul class="reset rightfield fr" style="width: 15%">
            <li><a class="remove" href="javascript:ChequeRemoveButtonClick(@i)" id="chequeDetailsRemove">
            </a></li>
        </ul>
           }
        }

    }
</div>
