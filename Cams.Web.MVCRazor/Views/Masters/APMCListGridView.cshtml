@model Cams.Web.MVCRazor.Models.Masters.APMCModel
@using Cams.Web.MVCRazor
@using System.Web.UI.WebControls
@using DevExpress.Data
@using Cams.Common.Dto;
 @Html.DevExpress().GridView(
                                    settings =>
                                    {
                                        settings.Name = "APMCListGridViewDataBinding";
                                        settings.CallbackRouteValues = new { Controller = "Masters", Action = "APMCListGridView" };
                                        settings.Settings.ShowTitlePanel = false;
                                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                        settings.Settings.ShowFilterRow = true;
                                        settings.CommandColumn.ClearFilterButton.Visible = true;
                                        settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Bottom;
                                        settings.SettingsPager.FirstPageButton.Visible = true;
                                        settings.SettingsPager.LastPageButton.Visible = true;
                                        settings.SettingsPager.AlwaysShowPager = true;
                                        settings.SettingsPager.PageSize = 10;
                                        settings.SettingsPager.ShowEmptyDataRows = true;
                                        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
                                        settings.ControlStyle.CssClass = "fontName";
                                        settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;                                        
                                        

                                        settings.Settings.ShowGroupPanel = true;
                                        settings.KeyFieldName = "APMCId";
                                        settings.SettingsBehavior.AllowFocusedRow = true;
                                        settings.ClientSideEvents.FocusedRowChanged = "OnAPMCListGridViewDataBindingFocusedRowChanged";
                                        
                                        

                                        settings.CustomCallback = (sender, e) =>
                                        {
                                            int layoutIndex = Int32.Parse(e.Parameters);
                                            MVCxGridView grid = (MVCxGridView)sender;

                                            grid.BeginUpdate();
                                            try
                                            {
                                                grid.ClearSort();
                                                switch (layoutIndex)
                                                {
                                                    case 0:
                                                        grid.GroupBy(grid.Columns["Name"]);
                                                        break;
                                                    case 1:
                                                        grid.GroupBy(grid.Columns["Address.CityVillage.Name"]);
                                                        break;
                                                    case 2:
                                                        grid.GroupBy(grid.Columns["Address.CityVillage.DistrictOfCityVillage.StateOfDistrict.RegionName"]);
                                                        break;
                                                    case 3:
                                                        grid.GroupBy(grid.Columns["Status"]);
                                                        break;
                                                }
                                            }
                                            finally
                                            {
                                                grid.EndUpdate();
                                            }
                                            grid.ExpandAll();
                                        };

                                        settings.Columns.Add(column =>
                                        {
                                            column.FieldName = "APMCId";
                                            column.Caption = "APMC";
                                            column.CellStyle.CssClass = "fontName";
                                            column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
                                            column.Settings.AllowAutoFilter = DefaultBoolean.True;
                                            column.Settings.SortMode = DevExpress.XtraGrid.ColumnSortMode.DisplayText;
                                            column.ColumnType = MVCxGridViewColumnType.HyperLink;
                                            HyperLinkProperties properties = column.PropertiesEdit as HyperLinkProperties;
                                            String urlFormatString = Url.Action("GetAPMCView", "Masters", new RouteValueDictionary(new { apmcid = "{0}" }));
                                            properties.Style.Font.Name = "DejaVu Serif";
                                            properties.NavigateUrlFormatString = HttpUtility.UrlDecode(urlFormatString);
                                            properties.TextField = "Name";
                                        });

                                        settings.Columns.Add("Address.CityVillage.Name", "Place").CellStyle.CssClass = "fontName";
                                        settings.Columns.Add("Address.CityVillage.DistrictOfCityVillage.StateOfDistrict.RegionName", "State").CellStyle.CssClass = "fontName";

                                        settings.Columns.Add(column =>
                                        {
                                            column.Caption = "Contacts";
                                            column.Settings.AllowAutoFilter = DefaultBoolean.False;
                                            column.Settings.SortMode = DevExpress.XtraGrid.ColumnSortMode.DisplayText;
                                            //column.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                                            column.SetDataItemTemplateContent(c =>
                                            {
                                                Html.DevExpress().Label(editSettings =>
                                                {
                                                    editSettings.Text = string.Empty;
                                                    editSettings.Properties.Style.CssClass = "fontName";

                                                    foreach (ContactDetailsDto contact in (ContactDetailsDto[])DataBinder.Eval(c.DataItem, "ContactNos"))
                                                    {
                                                        editSettings.Text += contact.ContactNoType.ToString() + ": (" + contact.CountryCallingCode + ") " + ((contact.ContactNoType.ToString() != Cams.Common.ContactType.MobileNo.ToString()) ? contact.STDCode + " - " : string.Empty) + contact.ContactNo + "\n";
                                                    }
                                                    editSettings.Text += ((ContactDetailsDto[])DataBinder.Eval(c.DataItem, "ContactNos")).Length > 0 ? "\n" : string.Empty;


                                                    //editSettings.Text += (!String.IsNullOrEmpty(email1) ? "eMail1: " + email1 : string.Empty) + (!String.IsNullOrEmpty(email2) ? "\neMail2: " + email2 : string.Empty);
                                                }).GetHtml().ToHtmlString();

                                                string website = (string)DataBinder.Eval(c.DataItem, "Website");
                                                string email1 = (string)DataBinder.Eval(c.DataItem, "Email1");
                                                string email2 = (string)DataBinder.Eval(c.DataItem, "Email2");

                                                website = !String.IsNullOrEmpty(website) ?
                                                Html.DevExpress().HyperLink(linksetting =>
                                                {
                                                    linksetting.Properties.Text = website;
                                                    linksetting.Properties.Target = "_blank";
                                                    linksetting.ControlStyle.CssClass = "fontName";
                                                    linksetting.NavigateUrl = website.Contains(Cams.Common.Constants.HTTP) ? website : Cams.Common.Constants.HTTP + website;
                                                }).GetHtml().ToString()
                                                : string.Empty;

                                                if (!String.IsNullOrEmpty(email1)) { ViewContext.Writer.Write("<br />"); }
                                                email1 = !String.IsNullOrEmpty(email1) ?
                                                    Html.DevExpress().HyperLink(linksetting =>
                                                    {
                                                        linksetting.Properties.Text = email1;
                                                        linksetting.ControlStyle.CssClass = "fontName";
                                                        linksetting.NavigateUrl = Cams.Common.Constants.MAILTO + email1;
                                                    }).GetHtml().ToString()
                                                    : string.Empty;

                                                if (!String.IsNullOrEmpty(email2)) { ViewContext.Writer.Write("<br />"); }
                                                email2 = !String.IsNullOrEmpty(email2) ?
                                                    Html.DevExpress().HyperLink(linksetting =>
                                                    {
                                                        linksetting.Properties.Text = email2;
                                                        linksetting.ControlStyle.CssClass = "fontName";
                                                        linksetting.NavigateUrl = Cams.Common.Constants.MAILTO + email2;
                                                    }).GetHtml().ToString()
                                                    : string.Empty;

                                            });
                                        });
                                        
                                        settings.Columns.Add(column =>
                                        {
                                            column.FieldName = "Status";
                                            column.Caption = "Status";
                                            column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                                            column.Settings.AllowAutoFilter = DefaultBoolean.False;
                                            column.Settings.SortMode = DevExpress.XtraGrid.ColumnSortMode.DisplayText;
                                            column.SetDataItemTemplateContent(c =>
                                            {
                                                ViewContext.Writer.Write(
                                                    Html.DevExpress().Label(editSettings =>
                                                    {
                                                        string isActive = (string)DataBinder.Eval(c.DataItem, "Status");
                                                        editSettings.ControlStyle.CssClass = "fontName";
                                                        editSettings.Text = (isActive == "Active") ? ClientResources.UGLGridActive : ClientResources.UGLGridInActive;
                                                        editSettings.ControlStyle.ForeColor = (isActive == "Inactive") ? System.Drawing.Color.Red : System.Drawing.Color.Black;
                                                        editSettings.AssociatedControlName = "Status";
                                                    }).GetHtml().ToHtmlString()
                                                    );
                                            });
                                        });

                                        settings.Settings.ShowFooter = true;
                                        settings.SetFooterRowTemplateContent(footer =>
                                        {
                                            Html.DevExpress().HyperLink(linkSettings =>
                                            {
                                                linkSettings.Name = "EditButton";
                                                linkSettings.Properties.Style.CssClass = "button_Edit";
                                                linkSettings.Properties.ClientSideEvents.Click = "OnEditClick";
                                                linkSettings.ClientVisible = Model.APMCList.Count() == 0 ? false : true;
                                                linkSettings.NavigateUrl = Url.Action("Apmc", "Masters", new { mode = "edit" });
                                            }).Render();
                                        });

                                    }).Bind(Model.APMCList).GetHtml()
                                    