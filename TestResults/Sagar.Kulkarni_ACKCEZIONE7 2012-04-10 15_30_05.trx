<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="a805c791-16b2-4684-af40-02736597c03b" name="Sagar.Kulkarni@ACKCEZIONE7 2012-04-10 15:30:05" runUser="ACKCEZIONE\Sagar.Kulkarni" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="2f3ab211-9129-46ab-87e4-4332742e1f1b">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Sagar.Kulkarni_ACKCEZIONE7 2012-04-10 15_30_05">
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.Extension\bin\Debug\Cams.Extension.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.UnitTests\bin\Debug\FluentNHibernate.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.Common\bin\Debug\Cams.Common.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Libs\Iesi.Collections.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.WcfService\bin\Cams.WcfService.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.UnitTests\bin\Debug\NHibernate.ByteCode.Castle.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.UnitTests\bin\Debug\Common.Logging.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.UnitTests\bin\Debug\Spring.Core.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Libs\Castle.Core.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.UnitTests\bin\Debug\NHibernate.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.Domain\bin\Debug\Cams.Domain.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.Dal\bin\Debug\Cams.Dal.dll" />
      <DeploymentItem filename="D:\DND\CAMS\CAMS\Cams.UnitTests\bin\Debug\log4net.dll" />
    </Deployment>
    <Execution hostProcessPlatform="MSIL">
      <Hosts>
        <AspNet name="ASP.NET" executionType="WebDev" />
      </Hosts>
      <TestTypeSpecific>
        <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
          <AssemblyResolution>
            <TestDirectory useLoadContext="true" />
          </AssemblyResolution>
        </UnitTestRunConfig>
      </TestTypeSpecific>
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-04-10T15:30:05.2835150+05:30" queuing="2012-04-10T15:30:05.3635150+05:30" start="2012-04-10T15:30:05.3935150+05:30" finish="2012-04-10T15:30:24.8875150+05:30" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <DebugTrace>Unable to read configuration section common/logging.  Using no-op implemenation.
</DebugTrace>
    </Output>
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="GetUserById" storage="d:\dnd\cams\cams\cams.unittests\bin\debug\cams.unittests.dll" id="d165b5d0-298b-55b7-da96-f7ff4b902a59">
      <Execution id="93fb21b8-6161-4302-9a91-6100f645894b" />
      <TestMethod codeBase="D:/DND/CAMS/CAMS/Cams.UnitTests/bin/Debug/Cams.UnitTests.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Cams.UnitTests.Domain.Services.UserServiceTests, Cams.UnitTests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="GetUserById" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="d165b5d0-298b-55b7-da96-f7ff4b902a59" executionId="93fb21b8-6161-4302-9a91-6100f645894b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="93fb21b8-6161-4302-9a91-6100f645894b" testId="d165b5d0-298b-55b7-da96-f7ff4b902a59" testName="GetUserById" computerName="ACKCEZIONE7" duration="00:00:07.4451903" startTime="2012-04-10T15:30:05.3975150+05:30" endTime="2012-04-10T15:30:18.5215150+05:30" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="93fb21b8-6161-4302-9a91-6100f645894b">
      <Output>
        <StdOut>if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKEBD48A9EB3F09352]') AND parent_object_id = OBJECT_ID('Addresses'))
alter table Addresses  drop constraint FKEBD48A9EB3F09352


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK9DA4BC9730A8D0DB]') AND parent_object_id = OBJECT_ID('APMC'))
alter table APMC  drop constraint FK9DA4BC9730A8D0DB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKFE634FC217810183]') AND parent_object_id = OBJECT_ID('APMCContacts'))
alter table APMCContacts  drop constraint FKFE634FC217810183


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKFE634FC2220FDEAE]') AND parent_object_id = OBJECT_ID('APMCContacts'))
alter table APMCContacts  drop constraint FKFE634FC2220FDEAE


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKCCCAB1B4B5CBFC9B]') AND parent_object_id = OBJECT_ID('BankBranches'))
alter table BankBranches  drop constraint FKCCCAB1B4B5CBFC9B


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKCCCAB1B430A8D0DB]') AND parent_object_id = OBJECT_ID('BankBranches'))
alter table BankBranches  drop constraint FKCCCAB1B430A8D0DB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKCCCAB1B4806E8EBB]') AND parent_object_id = OBJECT_ID('BankBranches'))
alter table BankBranches  drop constraint FKCCCAB1B4806E8EBB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKCCCAB1B4200A2312]') AND parent_object_id = OBJECT_ID('BankBranches'))
alter table BankBranches  drop constraint FKCCCAB1B4200A2312


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK7621088117810183]') AND parent_object_id = OBJECT_ID('BankBranchContacts'))
alter table BankBranchContacts  drop constraint FK7621088117810183


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK762108815A66D8C5]') AND parent_object_id = OBJECT_ID('BankBranchContacts'))
alter table BankBranchContacts  drop constraint FK762108815A66D8C5


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKE2E64D00EE4A24FE]') AND parent_object_id = OBJECT_ID('CityVillages'))
alter table CityVillages  drop constraint FKE2E64D00EE4A24FE


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK3A1EFBEA30A8D0DB]') AND parent_object_id = OBJECT_ID('Clients'))
alter table Clients  drop constraint FK3A1EFBEA30A8D0DB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK3A1EFBEA220FDEAE]') AND parent_object_id = OBJECT_ID('Clients'))
alter table Clients  drop constraint FK3A1EFBEA220FDEAE


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK3A1EFBEA4ACC66F9]') AND parent_object_id = OBJECT_ID('Clients'))
alter table Clients  drop constraint FK3A1EFBEA4ACC66F9


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK3A1EFBEA1E36A4A1]') AND parent_object_id = OBJECT_ID('Clients'))
alter table Clients  drop constraint FK3A1EFBEA1E36A4A1


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK3A1EFBEAEB56B3B4]') AND parent_object_id = OBJECT_ID('Clients'))
alter table Clients  drop constraint FK3A1EFBEAEB56B3B4


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKEE45DE5817810183]') AND parent_object_id = OBJECT_ID('ClientContacts'))
alter table ClientContacts  drop constraint FKEE45DE5817810183


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKEE45DE58F3AA38D2]') AND parent_object_id = OBJECT_ID('ClientContacts'))
alter table ClientContacts  drop constraint FKEE45DE58F3AA38D2


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKF4CF05863078D16]') AND parent_object_id = OBJECT_ID('ClientPartners'))
alter table ClientPartners  drop constraint FKF4CF05863078D16


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKF4CF0586F3AA38D2]') AND parent_object_id = OBJECT_ID('ClientPartners'))
alter table ClientPartners  drop constraint FKF4CF0586F3AA38D2


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKBBD37C1EFC01A4B3]') AND parent_object_id = OBJECT_ID('ClientCommodities'))
alter table ClientCommodities  drop constraint FKBBD37C1EFC01A4B3


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKBBD37C1EF3AA38D2]') AND parent_object_id = OBJECT_ID('ClientCommodities'))
alter table ClientCommodities  drop constraint FKBBD37C1EF3AA38D2


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK667CA0E130A8D0DB]') AND parent_object_id = OBJECT_ID('ClientPartnerDetails'))
alter table ClientPartnerDetails  drop constraint FK667CA0E130A8D0DB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK667CA0E1934218F7]') AND parent_object_id = OBJECT_ID('ClientPartnerDetails'))
alter table ClientPartnerDetails  drop constraint FK667CA0E1934218F7


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK667CA0E16837C633]') AND parent_object_id = OBJECT_ID('ClientPartnerDetails'))
alter table ClientPartnerDetails  drop constraint FK667CA0E16837C633


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK262FA82417810183]') AND parent_object_id = OBJECT_ID('ClientPartnerContacts'))
alter table ClientPartnerContacts  drop constraint FK262FA82417810183


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK262FA8243078D16]') AND parent_object_id = OBJECT_ID('ClientPartnerContacts'))
alter table ClientPartnerContacts  drop constraint FK262FA8243078D16


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK7F595BBC30A8D0DB]') AND parent_object_id = OBJECT_ID('ClientPartnerGuardianDetails'))
alter table ClientPartnerGuardianDetails  drop constraint FK7F595BBC30A8D0DB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK7F595BBCE2720DC7]') AND parent_object_id = OBJECT_ID('ClientPartnerGuardianDetails'))
alter table ClientPartnerGuardianDetails  drop constraint FK7F595BBCE2720DC7


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKE3EDB7D317810183]') AND parent_object_id = OBJECT_ID('ClientPartnerGuardianContacts'))
alter table ClientPartnerGuardianContacts  drop constraint FKE3EDB7D317810183


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKE3EDB7D36837C633]') AND parent_object_id = OBJECT_ID('ClientPartnerGuardianContacts'))
alter table ClientPartnerGuardianContacts  drop constraint FKE3EDB7D36837C633


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK277CD4DE30A8D0DB]') AND parent_object_id = OBJECT_ID('ClientPrimaryContactPerson'))
alter table ClientPrimaryContactPerson  drop constraint FK277CD4DE30A8D0DB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK277CD4DE934218F7]') AND parent_object_id = OBJECT_ID('ClientPrimaryContactPerson'))
alter table ClientPrimaryContactPerson  drop constraint FK277CD4DE934218F7


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK68CC536C17810183]') AND parent_object_id = OBJECT_ID('ClientPrimaryContacts'))
alter table ClientPrimaryContacts  drop constraint FK68CC536C17810183


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK68CC536CEB56B3B4]') AND parent_object_id = OBJECT_ID('ClientPrimaryContacts'))
alter table ClientPrimaryContacts  drop constraint FK68CC536CEB56B3B4


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD39CFB93E88979F]') AND parent_object_id = OBJECT_ID('ClientSubscriptions'))
alter table ClientSubscriptions  drop constraint FKAD39CFB93E88979F


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKEB394DEB5551111C]') AND parent_object_id = OBJECT_ID('ClientSubscriptionPayments'))
alter table ClientSubscriptionPayments  drop constraint FKEB394DEB5551111C


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKEB394DEB1E36A4A1]') AND parent_object_id = OBJECT_ID('ClientSubscriptionPayments'))
alter table ClientSubscriptionPayments  drop constraint FKEB394DEB1E36A4A1


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK13B864905A66D8C5]') AND parent_object_id = OBJECT_ID('ClientSubscriptionPaymentDetails'))
alter table ClientSubscriptionPaymentDetails  drop constraint FK13B864905A66D8C5


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKD9D9B611FC01A4B3]') AND parent_object_id = OBJECT_ID('Commodities'))
alter table Commodities  drop constraint FKD9D9B611FC01A4B3


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK216270F885BBA2FF]') AND parent_object_id = OBJECT_ID('UserContacts'))
alter table UserContacts  drop constraint FK216270F885BBA2FF


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK216270F817810183]') AND parent_object_id = OBJECT_ID('UserContacts'))
alter table UserContacts  drop constraint FK216270F817810183


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKED9B3FC7A82E65]') AND parent_object_id = OBJECT_ID('UserEmergencyContacts'))
alter table UserEmergencyContacts  drop constraint FKED9B3FC7A82E65


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKED9B3FC717810183]') AND parent_object_id = OBJECT_ID('UserEmergencyContacts'))
alter table UserEmergencyContacts  drop constraint FKED9B3FC717810183


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKEF9C46696BB1821E]') AND parent_object_id = OBJECT_ID('Districts'))
alter table Districts  drop constraint FKEF9C46696BB1821E


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKFB0619BC7C97897E]') AND parent_object_id = OBJECT_ID('ParentChildMenus'))
alter table ParentChildMenus  drop constraint FKFB0619BC7C97897E


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKFB0619BCC6318172]') AND parent_object_id = OBJECT_ID('ParentChildMenus'))
alter table ParentChildMenus  drop constraint FKFB0619BCC6318172


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKFB0619BC40604BAC]') AND parent_object_id = OBJECT_ID('ParentChildMenus'))
alter table ParentChildMenus  drop constraint FKFB0619BC40604BAC


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK4256C649F1130D47]') AND parent_object_id = OBJECT_ID('UserRolePermissions'))
alter table UserRolePermissions  drop constraint FK4256C649F1130D47


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK4256C649451CEFCF]') AND parent_object_id = OBJECT_ID('UserRolePermissions'))
alter table UserRolePermissions  drop constraint FK4256C649451CEFCF


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKDD28E238F1130D47]') AND parent_object_id = OBJECT_ID('UserGroupRolePermissions'))
alter table UserGroupRolePermissions  drop constraint FKDD28E238F1130D47


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKDD28E238E80F2A03]') AND parent_object_id = OBJECT_ID('UserGroupRolePermissions'))
alter table UserGroupRolePermissions  drop constraint FKDD28E238E80F2A03


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK74CFC3C0423BF3B4]') AND parent_object_id = OBJECT_ID('States'))
alter table States  drop constraint FK74CFC3C0423BF3B4


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK5B1BEC2430A8D0DB]') AND parent_object_id = OBJECT_ID('UsersEmergencyContactPerson'))
alter table UsersEmergencyContactPerson  drop constraint FK5B1BEC2430A8D0DB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK5B1BEC24E2720DC7]') AND parent_object_id = OBJECT_ID('UsersEmergencyContactPerson'))
alter table UsersEmergencyContactPerson  drop constraint FK5B1BEC24E2720DC7


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK969171B293C772A1]') AND parent_object_id = OBJECT_ID('UserUserGroups'))
alter table UserUserGroups  drop constraint FK969171B293C772A1


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK969171B26E3B9873]') AND parent_object_id = OBJECT_ID('UserUserGroups'))
alter table UserUserGroups  drop constraint FK969171B26E3B9873


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK54344AADE80F2A03]') AND parent_object_id = OBJECT_ID('UserGroupRoles'))
alter table UserGroupRoles  drop constraint FK54344AADE80F2A03


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK54344AAD6E3B9873]') AND parent_object_id = OBJECT_ID('UserGroupRoles'))
alter table UserGroupRoles  drop constraint FK54344AAD6E3B9873


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK617D3C3A934218F7]') AND parent_object_id = OBJECT_ID('Users'))
alter table Users  drop constraint FK617D3C3A934218F7


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK617D3C3A85BBA2FF]') AND parent_object_id = OBJECT_ID('Users'))
alter table Users  drop constraint FK617D3C3A85BBA2FF


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKDFBBDE7E451CEFCF]') AND parent_object_id = OBJECT_ID('UserRoles'))
alter table UserRoles  drop constraint FKDFBBDE7E451CEFCF


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKDFBBDE7E93C772A1]') AND parent_object_id = OBJECT_ID('UserRoles'))
alter table UserRoles  drop constraint FKDFBBDE7E93C772A1


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK15F395D130A8D0DB]') AND parent_object_id = OBJECT_ID('UserProfiles'))
alter table UserProfiles  drop constraint FK15F395D130A8D0DB


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK15F395D1A82E65]') AND parent_object_id = OBJECT_ID('UserProfiles'))
alter table UserProfiles  drop constraint FK15F395D1A82E65


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK1A5EE368F1130D47]') AND parent_object_id = OBJECT_ID('vwUserUserGroupRolePermissions'))
alter table vwUserUserGroupRolePermissions  drop constraint FK1A5EE368F1130D47


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK1A5EE36893C772A1]') AND parent_object_id = OBJECT_ID('vwUserUserGroupRolePermissions'))
alter table vwUserUserGroupRolePermissions  drop constraint FK1A5EE36893C772A1


    if exists (select * from dbo.sysobjects where id = object_id(N'ActivityLogs') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ActivityLogs

    if exists (select * from dbo.sysobjects where id = object_id(N'Addresses') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Addresses

    if exists (select * from dbo.sysobjects where id = object_id(N'APMC') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table APMC

    if exists (select * from dbo.sysobjects where id = object_id(N'APMCContacts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table APMCContacts

    if exists (select * from dbo.sysobjects where id = object_id(N'BankBranches') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table BankBranches

    if exists (select * from dbo.sysobjects where id = object_id(N'BankBranchContacts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table BankBranchContacts

    if exists (select * from dbo.sysobjects where id = object_id(N'Banks') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Banks

    if exists (select * from dbo.sysobjects where id = object_id(N'BusinessConstitutions') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table BusinessConstitutions

    if exists (select * from dbo.sysobjects where id = object_id(N'ChargesPayableTo') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ChargesPayableTo

    if exists (select * from dbo.sysobjects where id = object_id(N'CityVillages') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table CityVillages

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientBusinessConstitutionHistory') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientBusinessConstitutionHistory

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientCommoditiesHistory') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientCommoditiesHistory

    if exists (select * from dbo.sysobjects where id = object_id(N'Clients') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Clients

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientContacts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientContacts

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientPartners') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientPartners

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientCommodities') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientCommodities

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientPartnerDetails') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientPartnerDetails

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientPartnerContacts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientPartnerContacts

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientPartnerGuardianDetails') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientPartnerGuardianDetails

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientPartnerGuardianContacts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientPartnerGuardianContacts

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientPartnerHistory') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientPartnerHistory

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientPrimaryContactPerson') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientPrimaryContactPerson

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientPrimaryContacts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientPrimaryContacts

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientSubscriptions') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientSubscriptions

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientSubscriptionPayments') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientSubscriptionPayments

    if exists (select * from dbo.sysobjects where id = object_id(N'ClientSubscriptionPaymentDetails') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ClientSubscriptionPaymentDetails

    if exists (select * from dbo.sysobjects where id = object_id(N'CommodityClasses') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table CommodityClasses

    if exists (select * from dbo.sysobjects where id = object_id(N'Commodities') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Commodities

    if exists (select * from dbo.sysobjects where id = object_id(N'ContactDetails') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ContactDetails

    if exists (select * from dbo.sysobjects where id = object_id(N'UserContacts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserContacts

    if exists (select * from dbo.sysobjects where id = object_id(N'UserEmergencyContacts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserEmergencyContacts

    if exists (select * from dbo.sysobjects where id = object_id(N'Country') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Country

    if exists (select * from dbo.sysobjects where id = object_id(N'Designations') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Designations

    if exists (select * from dbo.sysobjects where id = object_id(N'Districts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Districts

    if exists (select * from dbo.sysobjects where id = object_id(N'LabourChargeTypes') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table LabourChargeTypes

    if exists (select * from dbo.sysobjects where id = object_id(N'MeasuringUnit') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table MeasuringUnit

    if exists (select * from dbo.sysobjects where id = object_id(N'Menus') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Menus

    if exists (select * from dbo.sysobjects where id = object_id(N'ParentChildMenus') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table ParentChildMenus

    if exists (select * from dbo.sysobjects where id = object_id(N'RelationShips') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table RelationShips

    if exists (select * from dbo.sysobjects where id = object_id(N'Roles') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Roles

    if exists (select * from dbo.sysobjects where id = object_id(N'UserRolePermissions') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserRolePermissions

    if exists (select * from dbo.sysobjects where id = object_id(N'UserGroupRolePermissions') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserGroupRolePermissions

    if exists (select * from dbo.sysobjects where id = object_id(N'States') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table States

    if exists (select * from dbo.sysobjects where id = object_id(N'SubscriptionMaster') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table SubscriptionMaster

    if exists (select * from dbo.sysobjects where id = object_id(N'UsersEmergencyContactPerson') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UsersEmergencyContactPerson

    if exists (select * from dbo.sysobjects where id = object_id(N'UserGroups') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserGroups

    if exists (select * from dbo.sysobjects where id = object_id(N'UserUserGroups') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserUserGroups

    if exists (select * from dbo.sysobjects where id = object_id(N'UserGroupRoles') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserGroupRoles

    if exists (select * from dbo.sysobjects where id = object_id(N'Users') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Users

    if exists (select * from dbo.sysobjects where id = object_id(N'UserRoles') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserRoles

    if exists (select * from dbo.sysobjects where id = object_id(N'UserProfiles') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table UserProfiles

    if exists (select * from dbo.sysobjects where id = object_id(N'vwUserUserGroupRolePermissions') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table vwUserUserGroupRolePermissions

    if exists (select * from dbo.sysobjects where id = object_id(N'BankBranchWeeklyHalfDays') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table BankBranchWeeklyHalfDays

    if exists (select * from dbo.sysobjects where id = object_id(N'BankBranchWeeklyOffs') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table BankBranchWeeklyOffs

    if exists (select * from dbo.sysobjects where id = object_id(N'Zones') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Zones

    create table ActivityLogs (
        LogId INT IDENTITY NOT NULL,
       LoggedBy NVARCHAR(255) not null,
       LoggedDate datetime default getdate()  not null,
       ActivityRelatedTo NVARCHAR(50) not null,
       Description NVARCHAR(255) null,
       CAId INT null,
       ObjectId NVARCHAR(255) null,
       primary key (LogId)
    )

    create table Addresses (
        AddressId BIGINT IDENTITY NOT NULL,
       AddressLine1 NVARCHAR(255) null,
       AddressLine2 NVARCHAR(255) null,
       PIN NVARCHAR(10) null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       CityVillageId INT null,
       primary key (AddressId)
    )

    create table APMC (
        APMCId INT IDENTITY NOT NULL,
       Name NVARCHAR(80) not null,
       Email1 NVARCHAR(50) null,
       Email2 NVARCHAR(50) null,
       Website NVARCHAR(100) null,
       Status NVARCHAR(10) not null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       AddressId BIGINT null,
       primary key (APMCId)
    )

    create table APMCContacts (
        APMCId INT not null,
       ContactDetailsId BIGINT not null
    )

    create table BankBranches (
        BranchId INT IDENTITY NOT NULL,
       Name NVARCHAR(255) not null,
       CAId INT null,
       IFSCCode NVARCHAR(50) null,
       MICRCode NVARCHAR(50) null,
       SWIFTCode NVARCHAR(50) null,
       Email1 NVARCHAR(100) null,
       Email2 NVARCHAR(100) null,
       FullDayTimeFrom TIME null,
       FullDayTimeTo TIME null,
       HalfDayTimeFrom TIME null,
       HalfDayTimeTo TIME null,
       FullDayBreakFrom TIME null,
       FullDayBreakTo TIME null,
       HalfDayBreakFrom TIME null,
       HalfDayBreakTo TIME null,
       BaseBranchId INT null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       BankId INT null,
       AddressId BIGINT null,
       WeeklyHalfDayId INT null,
       WeeklyOffDayId INT null,
       primary key (BranchId)
    )

    create table BankBranchContacts (
        BranchId INT not null,
       ContactDetailsId BIGINT not null
    )

    create table Banks (
        BankId INT IDENTITY NOT NULL,
       BankName NVARCHAR(255) not null,
       Alias NVARCHAR(15) null,
       CAId INT null,
       URL NVARCHAR(100) null,
       BaseBankId INT null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       primary key (BankId)
    )

    create table BusinessConstitutions (
        BusinessConstitutionId INT IDENTITY NOT NULL,
       BusinessConstitutionName NVARCHAR(50) not null,
       IsActive BIT not null,
       primary key (BusinessConstitutionId)
    )

    create table ChargesPayableTo (
        ChargesPayableToId INT IDENTITY NOT NULL,
       PayableTo NVARCHAR(30) not null,
       IsActive BIT not null,
       primary key (ChargesPayableToId)
    )

    create table CityVillages (
        CityVillageId INT IDENTITY NOT NULL,
       Name NVARCHAR(255) not null,
       CityOrVillage NVARCHAR(255) not null,
       STDCode NVARCHAR(30) null,
       CAId INT null,
       BaseCityVillageId INT null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       DistrictId INT null,
       primary key (CityVillageId)
    )

    create table ClientBusinessConstitutionHistory (
        ClientBusinessConstitutionHistoryId INT IDENTITY NOT NULL,
       CAId INT not null,
       BusinessConstitutionId INT not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       primary key (ClientBusinessConstitutionHistoryId)
    )

    create table ClientCommoditiesHistory (
        ClientCommoditiesHistoryId INT IDENTITY NOT NULL,
       CAId INT not null,
       CommodityClassId INT not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       primary key (ClientCommoditiesHistoryId)
    )

    create table Clients (
        CAId INT IDENTITY NOT NULL,
       DisplayClientId NVARCHAR(30) not null,
       CompanyName NVARCHAR(200) not null,
       RegistrationDate datetime null,
       Alias NVARCHAR(10) null,
       Image NVARCHAR(255) null,
       PAN NVARCHAR(20) null,
       TAN NVARCHAR(20) null,
       Email1 NVARCHAR(100) null,
       Email2 NVARCHAR(100) null,
       Website NVARCHAR(100) null,
       IsActive BIT not null,
       IsDeleted BIT not null,
       Status NVARCHAR(15) not null,
       AllowEdit BIT not null,
       APMCLicenseNo NVARCHAR(255) null,
       NoOfPartners INT not null,
       TDSOnSubscriptionPayment DECIMAL(19,5) not null,
       AdditionalInfoForSubscriptionPayment NVARCHAR(255) null,
       APMCLicenseValidUpTo datetime null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       AccountManagerId BIGINT not null,
       AddressId BIGINT null,
       APMCId INT null,
       BusinessConstitutionId INT null,
       ClientSubscriptionId INT null,
       CAPrimaryContactPersonId INT null,
       primary key (CAId)
    )

    create table ClientContacts (
        CAId INT not null,
       ContactDetailsId BIGINT not null
    )

    create table ClientPartners (
        CAId INT not null,
       PartnerId INT not null
    )

    create table ClientCommodities (
        CAId INT not null,
       CommodityClassId INT not null
    )

    create table ClientPartnerDetails (
        PartnerId INT IDENTITY NOT NULL,
       Title NVARCHAR(10) not null,
       PartnerName NVARCHAR(255) null,
       Gender NVARCHAR(5) not null,
       DateOfBirth datetime default getdate()  null,
       PAN NVARCHAR(20) null,
       UID NVARCHAR(20) null,
       Image NVARCHAR(255) null,
       Email1 NVARCHAR(100) null,
       Email2 NVARCHAR(100) null,
       JoiningDate datetime default getdate()  null,
       RelievingDate datetime default getdate()  null,
       IsActive BIT not null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       AddressId BIGINT null,
       DesignationId INT null,
       ClientPartnerGuardianId INT null,
       primary key (PartnerId)
    )

    create table ClientPartnerContacts (
        PartnerId INT not null,
       ContactDetailsId BIGINT not null
    )

    create table ClientPartnerGuardianDetails (
        ClientPartnerGuardianId INT IDENTITY NOT NULL,
       Title NVARCHAR(10) not null,
       GuardianName NVARCHAR(255) null,
       Gender NVARCHAR(5) not null,
       DateOfBirth datetime default getdate()  null,
       PAN NVARCHAR(20) null,
       UID NVARCHAR(20) null,
       Image NVARCHAR(255) null,
       Email1 NVARCHAR(100) null,
       Email2 NVARCHAR(100) null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       AddressId BIGINT null,
       RelationshipId INT null,
       primary key (ClientPartnerGuardianId)
    )

    create table ClientPartnerGuardianContacts (
        ClientPartnerGuardianId INT not null,
       ContactDetailsId BIGINT not null
    )

    create table ClientPartnerHistory (
        ClientPartnerHistoryId INT IDENTITY NOT NULL,
       PartnerId INT not null,
       BusinessConstitutionId INT not null,
       CAId INT not null,
       JoiningDate datetime default getdate()  not null,
       RelievingDate datetime default getdate()  null,
       IsActive BIT not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       primary key (ClientPartnerHistoryId)
    )

    create table ClientPrimaryContactPerson (
        CAPrimaryContactPersonId INT IDENTITY NOT NULL,
       Title NVARCHAR(5) not null,
       CAPrimaryConatactPersonName NVARCHAR(255) null,
       Gender NVARCHAR(5) not null,
       DateOfBirth datetime default getdate()  null,
       MothersMaidenName NVARCHAR(255) null,
       PAN NVARCHAR(20) null,
       UID NVARCHAR(20) null,
       Image NVARCHAR(255) null,
       Email1 NVARCHAR(100) null,
       Email2 NVARCHAR(100) null,
       IsSameAsCompanyAddress BIT not null,
       IsSameAsCompanyContact BIT not null,
       MobileNo NVARCHAR(255) null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       AddressId BIGINT null,
       DesignationId INT null,
       primary key (CAPrimaryContactPersonId)
    )

    create table ClientPrimaryContacts (
        CAPrimaryContactPersonId INT not null,
       ContactDetailsId BIGINT not null
    )

    create table ClientSubscriptions (
        ClientSubscriptionId INT IDENTITY NOT NULL,
       SubscriptionPeriod INT null,
       SubscriptionPeriodFromDate datetime default getdate()  null,
       SubscriptionPeriodToDate datetime default getdate()  null,
       AdditionalNoOfEmployees INT not null,
       AdditionalNoOfAuditors INT not null,
       AdditionalNoOfAssociates INT not null,
       AdditionalCostForEmployees DECIMAL(19,5) not null,
       AdditionalCostForAuditors DECIMAL(19,5) not null,
       AdditionalCostForAssociates DECIMAL(19,5) not null,
       DiscountInPercentage REAL not null,
       DiscountInRupees DECIMAL(19,5) not null,
       ServiceTax DECIMAL(19,5) not null,
       OtherTax DECIMAL(19,5) not null,
       Status NVARCHAR(15) not null,
       AdditionalInfo NVARCHAR(255) null,
       ActivationDate datetime default getdate()  null,
       AllowEdit BIT not null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       SubscriptionId INT null,
       primary key (ClientSubscriptionId)
    )

    create table ClientSubscriptionPayments (
        ClientSubscriptionId INT not null,
       CASubscriptionPaymentDetailsId INT not null
    )

    create table ClientSubscriptionPaymentDetails (
        CASubscriptionPaymentDetailsId INT IDENTITY NOT NULL,
       PaymentMode NVARCHAR(10) null,
       Amount DECIMAL(19,5) not null,
       IsRTGS BIT not null,
       IsStandardCheque BIT not null,
       IsNEFT BIT not null,
       ChequeDDTransationNo NVARCHAR(15) null,
       ChequeDDTransactionDate datetime default getdate()  null,
       ChequeDDClearanceDates datetime default getdate()  null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       BranchId INT null,
       primary key (CASubscriptionPaymentDetailsId)
    )

    create table CommodityClasses (
        CommodityClassId INT IDENTITY NOT NULL,
       Name NVARCHAR(255) not null,
       IsActive BIT not null,
       primary key (CommodityClassId)
    )

    create table Commodities (
        CommodityId INT IDENTITY NOT NULL,
       Name NVARCHAR(255) not null,
       BotanicalName NVARCHAR(255) not null,
       Image NVARCHAR(255) null,
       IsActive BIT not null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       CommodityClassId INT null,
       primary key (CommodityId)
    )

    create table ContactDetails (
        ContactDetailsId BIGINT IDENTITY NOT NULL,
       ContactNo NVARCHAR(15) not null,
       ContactNoType NVARCHAR(255) null,
       CountryCallingCode NVARCHAR(5) not null,
       STDCode NVARCHAR(10) null,
       primary key (ContactDetailsId)
    )

    create table UserContacts (
        ContactDetailsId BIGINT not null,
       UserProfileId BIGINT not null
    )

    create table UserEmergencyContacts (
        ContactDetailsId BIGINT not null,
       UserEmergencyContactPersonId BIGINT not null
    )

    create table Country (
        CountryId INT IDENTITY NOT NULL,
       CountryName NVARCHAR(50) not null,
       CallingCode NVARCHAR(10) not null,
       AgeStd INT not null,
       Currency NVARCHAR(20) not null,
       CurrencyCode NVARCHAR(10) not null,
       Symbol NVARCHAR(10) not null,
       TimeZone NVARCHAR(255) not null,
       FinancialYearStart NVARCHAR(50) not null,
       FinancialYearEnd NVARCHAR(50) not null,
       Status NVARCHAR(10) not null,
       primary key (CountryId)
    )

    create table Designations (
        DesignationId INT IDENTITY NOT NULL,
       DesignationName NVARCHAR(255) not null,
       CAId INT null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       primary key (DesignationId)
    )

    create table Districts (
        DistrictId INT IDENTITY NOT NULL,
       DistrictName NVARCHAR(255) not null,
       StateId INT null,
       primary key (DistrictId)
    )

    create table LabourChargeTypes (
        LabourChargeId INT IDENTITY NOT NULL,
       LabourCharge NVARCHAR(50) not null,
       CAId INT not null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       primary key (LabourChargeId)
    )

    create table MeasuringUnit (
        UnitId INT IDENTITY NOT NULL,
       UnitType NVARCHAR(20) not null,
       MeasurementUnit NVARCHAR(30) not null,
       EquivalentUnit NVARCHAR(30) not null,
       CAId INT not null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       primary key (UnitId)
    )

    create table Menus (
        MenuId BIGINT IDENTITY NOT NULL,
       MenuName NVARCHAR(50) not null,
       MenuDescription NVARCHAR(255) null,
       IsMenuActive BIT not null,
       IsAckcezioneUser BIT not null,
       primary key (MenuId)
    )

    create table ParentChildMenus (
        MenuId BIGINT not null,
       MenuOrder INT not null,
       ParentMenuId BIGINT null,
       ChildMenuId BIGINT null,
       primary key (MenuId)
    )

    create table RelationShips (
        RelationshipId INT IDENTITY NOT NULL,
       Name NVARCHAR(255) not null,
       CAId INT null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       primary key (RelationshipId)
    )

    create table Roles (
        RoleId INT IDENTITY NOT NULL,
       RoleName NVARCHAR(255) not null,
       RoleGroup NVARCHAR(255) null,
       IsApplicableForAckUsers BIT null,
       IsAddApplicable BIT null,
       IsEditApplicable BIT null,
       IsViewApplicable BIT null,
       IsDeleteApplicable BIT null,
       IsPrintApplicable BIT null,
       primary key (RoleId)
    )

    create table UserRolePermissions (
        UserRolePermissionId BIGINT IDENTITY NOT NULL,
       AllowAdd BIT not null,
       AllowEdit BIT not null,
       AllowView BIT not null,
       AllowDelete BIT not null,
       AllowPrint BIT not null,
       RoleId INT not null,
       primary key (UserRolePermissionId)
    )

    create table UserGroupRolePermissions (
        UserGroupRolePermissionId BIGINT IDENTITY NOT NULL,
       AllowAdd BIT not null,
       AllowEdit BIT not null,
       AllowView BIT not null,
       AllowDelete BIT not null,
       AllowPrint BIT not null,
       RoleId INT not null,
       primary key (UserGroupRolePermissionId)
    )

    create table States (
        StateId INT IDENTITY NOT NULL,
       RegionType NVARCHAR(50) not null,
       RegionName NVARCHAR(50) not null,
       CountryId INT null,
       primary key (StateId)
    )

    create table SubscriptionMaster (
        SubscriptionId INT IDENTITY NOT NULL,
       SubscriptionType NVARCHAR(15) not null,
       TotalNoOfUsers INT not null,
       NoOfEmployees INT not null,
       NoOfAuditors INT not null,
       NoOfAssociates INT not null,
       SubscriptionFees DECIMAL(19,5) not null,
       RenewalFeesPerAnnum DECIMAL(19,5) not null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT not null,
       ModifiedDate datetime default getdate()  not null,
       primary key (SubscriptionId)
    )

    create table UsersEmergencyContactPerson (
        UserEmergencyContactPersonId BIGINT IDENTITY NOT NULL,
       Name NVARCHAR(255) not null,
       Email1 NVARCHAR(100) null,
       Email2 NVARCHAR(100) null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       AddressId BIGINT null,
       RelationshipId INT null,
       primary key (UserEmergencyContactPersonId)
    )

    create table UserGroups (
        UserGroupId INT IDENTITY NOT NULL,
       UserGroupName NVARCHAR(255) not null,
       Description NVARCHAR(255) null,
       CAId INT null,
       IsActive BIT null,
       IsDeleted BIT null,
       AllowEdit BIT null,
       AllowDelete BIT null,
       CreatedBy BIGINT null,
       CreatedDate datetime default getdate()  null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       primary key (UserGroupId)
    )

    create table UserUserGroups (
        UserGroupId INT not null,
       UserId BIGINT not null
    )

    create table UserGroupRoles (
        UserGroupId INT not null,
       UserGroupRolePermissionId BIGINT not null
    )

    create table Users (
        UserId BIGINT IDENTITY NOT NULL,
       Username NVARCHAR(255) not null,
       Title NVARCHAR(5) not null,
       Name NVARCHAR(255) not null,
       Email NVARCHAR(255) not null,
       MobileNo NVARCHAR(255) not null,
       Password NVARCHAR(255) not null,
       MothersMaidenName NVARCHAR(255) not null,
       CAId INT null,
       CountryCode NVARCHAR(255) not null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       DateOfBirth datetime default getdate()  not null,
       FailedPasswordAttemptCount INT null,
       FailedPasswordAttemptWindowStart datetime default getdate()  null,
       IsActive BIT not null,
       IsLockedOut BIT not null,
       IsOnLine BIT not null,
       LastActivityDate datetime default getdate()  null,
       LastLockedOutDate datetime default getdate()  null,
       LastLoginDate datetime default getdate()  null,
       LastPasswordChangedDate datetime default getdate()  null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       LastPassword NVARCHAR(255) null,
       SecondLastPassword NVARCHAR(255) null,
       SecondLastPasswordChangedDate datetime default getdate()  null,
       IsDeleted BIT not null,
       AllowEdit BIT not null,
       AllowDelete BIT not null,
       Image NVARCHAR(255) null,
       UserType NVARCHAR(15) null,
       DesignationId INT null,
       UserProfileId BIGINT null,
       primary key (UserId)
    )

    create table UserRoles (
        UserId BIGINT not null,
       UserRolePermissionId BIGINT not null
    )

    create table UserProfiles (
        UserProfileId BIGINT IDENTITY NOT NULL,
       Gender NVARCHAR(255) null,
       MaritalStatus NVARCHAR(255) null,
       UID NVARCHAR(30) null,
       PAN NVARCHAR(20) null,
       PassportNo NVARCHAR(20) null,
       PassportPlace NVARCHAR(255) null,
       PassportValidFromDate datetime default getdate()  null,
       PassportValidToDate datetime default getdate()  null,
       BloodGroup NVARCHAR(255) null,
       DateOfJoining datetime default getdate()  null,
       PFNo NVARCHAR(30) null,
       Email1 NVARCHAR(100) null,
       Email2 NVARCHAR(100) null,
       CreatedBy BIGINT not null,
       CreatedDate datetime default getdate()  not null,
       ModifiedBy BIGINT null,
       ModifiedDate datetime default getdate()  null,
       AddressId BIGINT null,
       UserEmergencyContactPersonId BIGINT null,
       primary key (UserProfileId)
    )

    create table vwUserUserGroupRolePermissions (
        RoleId INT not null,
       UserId BIGINT not null,
       AllowAdd INT null,
       AllowEdit INT null,
       AllowView INT null,
       AllowDelete INT null,
       AllowPrint INT null,
       primary key (RoleId, UserId)
    )</StdOut>
        <ErrorInfo>
          <Message>Initialization method Cams.UnitTests.Domain.Services.UserServiceTests.TestsInitialize threw exception. FluentNHibernate.Cfg.FluentConfigurationException: FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

 ---&gt; NHibernate.HibernateException: There is already an object named 'vwUserUserGroupRolePermissions' in the database. ---&gt; System.Data.SqlClient.SqlException: There is already an object named 'vwUserUserGroupRolePermissions' in the database..</Message>
          <StackTrace>    at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.RunExecuteNonQueryTds(String methodName, Boolean async)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.Tool.hbm2ddl.SchemaExport.ExecuteSql(IDbCommand cmd, String sql)
   at NHibernate.Tool.hbm2ddl.SchemaExport.Execute(Action`1 scriptAction, Boolean export, Boolean throwOnError, TextWriter exportOutput, IDbCommand statement, String sql)
   at NHibernate.Tool.hbm2ddl.SchemaExport.Execute(Action`1 scriptAction, Boolean export, Boolean justDrop, IDbConnection connection, TextWriter exportOutput)
   at NHibernate.Tool.hbm2ddl.SchemaExport.Execute(Action`1 scriptAction, Boolean export, Boolean justDrop)
 --- End of inner exception stack trace ---
    at NHibernate.Tool.hbm2ddl.SchemaExport.Execute(Action`1 scriptAction, Boolean export, Boolean justDrop)
   at Cams.Dal.BootStrapper.NhBootStrapper.&lt;CamsSchemaExport&gt;b__2(Configuration cfg) in D:\DND\CAMS\CAMS\Cams.Dal\BootStrapper\NhBootStrapper.cs:line 30
   at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration()
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildConfiguration()
   at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory()
 --- End of inner exception stack trace ---
    at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory()
   at Cams.Dal.BootStrapper.NhBootStrapper.CamsSchemaExport() in D:\DND\CAMS\CAMS\Cams.Dal\BootStrapper\NhBootStrapper.cs:line 28
   at Cams.UnitTests.CamsTestBase.InitialiseDatabase() in D:\DND\CAMS\CAMS\Cams.UnitTests\CamsTestBase.cs:line 34
   at Cams.UnitTests.CamsTestBase.TestsInitialize() in D:\DND\CAMS\CAMS\Cams.UnitTests\CamsTestBase.cs:line 21
   at Cams.UnitTests.Domain.Services.UserServiceTests.TestsInitialize() in D:\DND\CAMS\CAMS\Cams.UnitTests\Domain\Services\UserServiceTests.cs:line 48
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>